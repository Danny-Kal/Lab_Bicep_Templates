{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "6651508701476393715"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnetAddressSpaceHub": {
      "type": "string",
      "defaultValue": "10.2.0.0/16",
      "metadata": {
        "description": "Address space for the hub VNet."
      }
    },
    "vnetAddressSpaceSpoke1": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Address space for the first spoke VNet."
      }
    },
    "vnetAddressSpaceSpoke2": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "Address space for the second spoke VNet."
      }
    },
    "subnetHubName": {
      "type": "string",
      "defaultValue": "HubSubnet",
      "metadata": {
        "description": "Name for the hub subnet."
      }
    },
    "subnetSpoke1Name": {
      "type": "string",
      "defaultValue": "Spoke1Subnet",
      "metadata": {
        "description": "Name for the first spoke subnet."
      }
    },
    "subnetSpoke2Name": {
      "type": "string",
      "defaultValue": "Spoke2Subnet",
      "metadata": {
        "description": "Name for the second spoke subnet."
      }
    },
    "subnetHubAddressPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/24",
      "metadata": {
        "description": "Address prefix for the hub subnet."
      }
    },
    "subnetSpoke1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Address prefix for the first spoke subnet."
      }
    },
    "subnetSpoke2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/24",
      "metadata": {
        "description": "Address prefix for the second spoke subnet."
      }
    },
    "routeServerSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.1.0/27",
      "metadata": {
        "description": "Address prefix for the RouteServerSubnet. Must be at least a /27."
      }
    },
    "routeServerName": {
      "type": "string",
      "defaultValue": "HubRouteServer",
      "metadata": {
        "description": "Name for the Route Server."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-02-01",
      "name": "VN02",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpaceHub')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetHubName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetHubAddressPrefix')]"
            }
          },
          {
            "name": "RouteServerSubnet",
            "properties": {
              "addressPrefix": "[parameters('routeServerSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-02-01",
      "name": "VN01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpaceSpoke1')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetSpoke1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnetSpoke1AddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-02-01",
      "name": "VN03",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpaceSpoke2')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetSpoke2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnetSpoke2AddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', 'VN02', format('{0}-to-{1}', 'VN02', 'VN01'))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', 'VN01')]"
        },
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN01')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', 'VN01', format('{0}-to-{1}', 'VN01', 'VN02'))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]"
        },
        "allowForwardedTraffic": true,
        "useRemoteGateways": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN01')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', 'VN02', format('{0}-to-{1}', 'VN02', 'VN03'))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', 'VN03')]"
        },
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN03')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', 'VN03', format('{0}-to-{1}', 'VN03', 'VN02'))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]"
        },
        "allowForwardedTraffic": true,
        "useRemoteGateways": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN03')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "RouteServerPublicIP",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2021-05-01",
      "name": "[parameters('routeServerName')]",
      "location": "[parameters('location')]",
      "kind": "RouteServer",
      "properties": {
        "allowBranchToBranchTraffic": false,
        "virtualHubRouteTableV2s": [],
        "sku": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs/ipConfigurations",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}/{1}', parameters('routeServerName'), 'ipconfig1')]",
      "properties": {
        "subnet": {
          "id": "[format('{0}/subnets/RouteServerSubnet', resourceId('Microsoft.Network/virtualNetworks', 'VN02'))]"
        },
        "publicIPAddress": {
          "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'RouteServerPublicIP')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', parameters('routeServerName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'RouteServerPublicIP')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VN02')]"
      ]
    }
  ]
}
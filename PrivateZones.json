{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "6330322569631003698"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "labName": {
      "type": "string",
      "metadata": {
        "description": "Short name prefix for lab resources"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the Linux VMs"
      }
    },
    "adminPublicKey": {
      "type": "string",
      "metadata": {
        "description": "SSH public key (contents of your ~/.ssh/*.pub)"
      }
    },
    "allowSshFrom": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "CIDR to allow SSH from (e.g., 203.0.113.10/32). Use 0.0.0.0/0 only for testing."
      }
    },
    "deployPublicIPs": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Create Standard public IPs for both VMs (true = create)"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_D2s_v5"
      ],
      "metadata": {
        "description": "VM size"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.20.0.0/16",
      "metadata": {
        "description": "VNet address space"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.20.1.0/24",
      "metadata": {
        "description": "Subnet address prefix for workload subnet"
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "[format('{0}-nsg', parameters('labName'))]",
      "metadata": {
        "description": "NSG Name (optional override)"
      }
    }
  },
  "variables": {
    "vmAppName": "[format('{0}-vm-app', parameters('labName'))]",
    "vmClientName": "[format('{0}-vm-client', parameters('labName'))]",
    "cloudInitApp": "#cloud-config\r\npackage_update: true\r\npackages:\r\n  - nginx\r\nwrite_files:\r\n  - path: /var/www/html/index.html\r\n    content: |\r\n      <html>\r\n      <head><title>Internal App</title></head>\r\n      <body style=\"font-family: Arial, sans-serif;\">\r\n        <h1>Welcome to the Internal App</h1>\r\n        <p>This page is served by <b>${vmAppName}</b> on port 80.</p>\r\n        <p>If you can see this via <code>http://app.corp.local</code>, DNS is working!</p>\r\n      </body>\r\n      </html>\r\nruncmd:\r\n  - systemctl enable nginx\r\n  - systemctl restart nginx\r\n",
    "cloudInitClient": "#cloud-config\r\npackage_update: true\r\npackages:\r\n  - dnsutils\r\n  - curl\r\n  - jq\r\nruncmd:\r\n  - echo \"Client ready with nslookup, dig, and curl.\"\r\n"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-09-01",
      "name": "[parameters('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-SSH",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('allowSshFrom')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTP-From-VNet",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          },
          {
            "name": "Deny-All-Else",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4096,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-vnet', parameters('labName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', format('{0}-vnet', parameters('labName')), 'subnet1')]",
      "properties": {
        "addressPrefix": "[parameters('subnetPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('labName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-pip-app', parameters('labName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-pip-client', parameters('labName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-nic-app', parameters('labName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('labName')), 'subnet1')]"
              },
              "publicIPAddress": "[if(parameters('deployPublicIPs'), createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip-app', parameters('labName')))), null())]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip-app', parameters('labName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('labName')), 'subnet1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-nic-client', parameters('labName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('labName')), 'subnet1')]"
              },
              "publicIPAddress": "[if(parameters('deployPublicIPs'), createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip-client', parameters('labName')))), null())]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip-client', parameters('labName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('labName')), 'subnet1')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-09-01",
      "name": "[variables('vmAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmAppName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          },
          "customData": "[base64(variables('cloudInitApp'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-app', parameters('labName')))]"
            }
          ]
        }
      },
      "tags": {
        "role": "app",
        "lab": "[parameters('labName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-app', parameters('labName')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-09-01",
      "name": "[variables('vmClientName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmClientName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          },
          "customData": "[base64(variables('cloudInitClient'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-client', parameters('labName')))]"
            }
          ]
        }
      },
      "tags": {
        "role": "client",
        "lab": "[parameters('labName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-client', parameters('labName')))]"
      ]
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('labName')))]"
    },
    "subnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('labName')), 'subnet1')]"
    },
    "vmAppPrivateIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-app', parameters('labName'))), '2023-09-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "vmClientPrivateIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-client', parameters('labName'))), '2023-09-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "vmAppPublicIp": {
      "type": "string",
      "value": "[if(parameters('deployPublicIPs'), coalesce(reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip-app', parameters('labName'))), '2023-09-01').ipAddress, ''), '')]"
    },
    "vmClientPublicIp": {
      "type": "string",
      "value": "[if(parameters('deployPublicIPs'), coalesce(reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip-client', parameters('labName'))), '2023-09-01').ipAddress, ''), '')]"
    },
    "vmAppNameOut": {
      "type": "string",
      "value": "[variables('vmAppName')]"
    },
    "vmClientNameOut": {
      "type": "string",
      "value": "[variables('vmClientName')]"
    }
  }
}